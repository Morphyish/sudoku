import { applyStep } from './applyStep'

describe('sudoku/applyStep', () => {
    it('should apply the grid updates to the grid and update the helpers', () => {
        const grid = [
            [9, 6, 0, 0, 0, 7, 0, 2, 0],
            [0, 0, 2, 0, 3, 0, 0, 0, 8],
            [1, 0, 0, 2, 4, 0, 0, 0, 0],
            [0, 0, 7, 0, 0, 0, 3, 0, 6],
            [0, 0, 0, 0, 8, 0, 0, 0, 0],
            [2, 0, 5, 0, 0, 0, 8, 0, 0],
            [0, 0, 0, 0, 9, 6, 0, 0, 1],
            [7, 0, 0, 0, 5, 0, 6, 0, 0],
            [0, 3, 0, 1, 0, 0, 0, 4, 5],
        ]

        const helpers = [
            [[], [], [3, 4, 8], [5, 8], [1], [], [1, 4, 5], [], [3, 4]],
            [[4, 5], [4, 5, 7], [], [5, 6, 9], [], [1, 5, 9], [1, 4, 5, 7, 9], [1, 5, 6, 7, 9], []],
            [[], [5, 7, 8], [3, 8], [], [], [5, 8, 9], [5, 7, 9], [3, 5, 6, 7, 9], [3, 7, 9]],
            [[4, 8], [1, 4, 8, 9], [], [4, 5, 9], [1, 2], [1, 2, 4, 5, 9], [], [1, 5, 9], []],
            [[3, 4, 6], [1, 4, 9], [1, 3, 4, 6, 9], [3, 4, 5, 6, 7, 9], [], [1, 2, 3, 4, 5, 9], [1, 2, 4, 5, 7, 9], [1, 5, 7, 9], [2, 4, 7, 9]],
            [[], [1, 4, 9], [], [3, 4, 6, 7, 9], [1, 6, 7], [1, 3, 4, 9], [], [1, 7, 9], [4, 7, 9]],
            [[4, 5, 8], [2, 4, 5, 8], [4, 8], [3, 4, 7, 8], [], [], [2, 7], [3, 7, 8], []],
            [[], [1, 2, 4, 8, 9], [1, 4, 8, 9], [3, 4, 8], [], [2, 3, 4, 8], [], [3, 8, 9], [2, 3, 9]],
            [[6, 8], [], [6, 8, 9], [], [2, 7], [2, 8], [2, 7, 9], [], []],
        ]

        const step = {
            grid: {
                col: 4,
                row: 0,
                value: 1,
            },
        }

        const result = applyStep(grid, helpers, step)

        expect(result.grid).toEqual([
            [9, 6, 0, 0, 1, 7, 0, 2, 0],
            [0, 0, 2, 0, 3, 0, 0, 0, 8],
            [1, 0, 0, 2, 4, 0, 0, 0, 0],
            [0, 0, 7, 0, 0, 0, 3, 0, 6],
            [0, 0, 0, 0, 8, 0, 0, 0, 0],
            [2, 0, 5, 0, 0, 0, 8, 0, 0],
            [0, 0, 0, 0, 9, 6, 0, 0, 1],
            [7, 0, 0, 0, 5, 0, 6, 0, 0],
            [0, 3, 0, 1, 0, 0, 0, 4, 5],
        ])
        expect(result.helpers).toEqual([
            [[], [], [3, 4, 8], [5, 8], [], [], [4, 5], [], [3, 4]],
            [[4, 5], [4, 5, 7], [], [5, 6, 9], [], [5, 9], [1, 4, 5, 7, 9], [1, 5, 6, 7, 9], []],
            [[], [5, 7, 8], [3, 8], [], [], [5, 8, 9], [5, 7, 9], [3, 5, 6, 7, 9], [3, 7, 9]],
            [[4, 8], [1, 4, 8, 9], [], [4, 5, 9], [2], [1, 2, 4, 5, 9], [], [1, 5, 9], []],
            [[3, 4, 6], [1, 4, 9], [1, 3, 4, 6, 9], [3, 4, 5, 6, 7, 9], [], [1, 2, 3, 4, 5, 9], [1, 2, 4, 5, 7, 9], [1, 5, 7, 9], [2, 4, 7, 9]],
            [[], [1, 4, 9], [], [3, 4, 6, 7, 9], [6, 7], [1, 3, 4, 9], [], [1, 7, 9], [4, 7, 9]],
            [[4, 5, 8], [2, 4, 5, 8], [4, 8], [3, 4, 7, 8], [], [], [2, 7], [3, 7, 8], []],
            [[], [1, 2, 4, 8, 9], [1, 4, 8, 9], [3, 4, 8], [], [2, 3, 4, 8], [], [3, 8, 9], [2, 3, 9]],
            [[6, 8], [], [6, 8, 9], [], [2, 7], [2, 8], [2, 7, 9], [], []],
        ])
    })

    it('should apply the helpers updates to the helpers', () => {
        const grid = [
            [9, 6, 0, 0, 1, 7, 0, 2, 0],
            [0, 0, 2, 6, 3, 0, 0, 0, 8],
            [1, 0, 0, 2, 4, 0, 0, 6, 0],
            [0, 0, 7, 0, 2, 0, 3, 0, 6],
            [3, 0, 6, 0, 8, 0, 0, 0, 0],
            [2, 0, 5, 0, 6, 0, 8, 0, 0],
            [0, 0, 0, 0, 9, 6, 0, 0, 1],
            [7, 0, 0, 0, 5, 0, 6, 0, 0],
            [6, 3, 0, 1, 7, 0, 0, 4, 5],
        ]

        const helpers = [
            [[], [], [3, 4, 8], [5, 8], [], [], [4, 5], [], [3, 4]],
            [[4, 5], [4, 5, 7], [], [], [], [5, 9], [1, 4, 5, 7, 9], [1, 5, 7, 9], []],
            [[], [5, 7, 8], [3, 8], [], [], [5, 8, 9], [5, 7, 9], [], [3, 7, 9]],
            [[4, 8], [1, 4, 8, 9], [], [4, 5, 9], [], [1, 4, 5], [], [1, 5, 9], []],
            [[], [1, 4, 9], [], [4, 5, 7, 9], [], [1, 4, 5], [1, 2, 4, 5, 7, 9], [1, 5, 7, 9], [2, 4, 7, 9]],
            [[], [1, 4, 9], [], [3, 4, 7, 9], [], [1, 3, 4], [], [1, 7, 9], [4, 7, 9]],
            [[4, 5, 8], [2, 4, 5, 8], [4, 8], [3, 4, 8], [], [], [2, 7], [3, 7, 8], []],
            [[], [2, 4, 8], [1, 4, 8, 9], [3, 4, 8], [], [2, 3, 4, 8], [], [3, 8, 9], [2, 9]],
            [[], [], [8, 9], [], [], [2, 8], [2, 9], [], []],
        ]

        const step = {
            helpers: [
                {
                    col: 7,
                    row: 6,
                    values: [3, 8],
                },
                {
                    col: 7,
                    row: 7,
                    values: [3, 8],
                },
            ],
        }

        const result = applyStep(grid, helpers, step)

        expect(result.grid).toEqual(grid)
        expect(result.helpers).toEqual([
            [[], [], [3, 4, 8], [5, 8], [], [], [4, 5], [], [3, 4]],
            [[4, 5], [4, 5, 7], [], [], [], [5, 9], [1, 4, 5, 7, 9], [1, 5, 7, 9], []],
            [[], [5, 7, 8], [3, 8], [], [], [5, 8, 9], [5, 7, 9], [], [3, 7, 9]],
            [[4, 8], [1, 4, 8, 9], [], [4, 5, 9], [], [1, 4, 5], [], [1, 5, 9], []],
            [[], [1, 4, 9], [], [4, 5, 7, 9], [], [1, 4, 5], [1, 2, 4, 5, 7, 9], [1, 5, 7, 9], [2, 4, 7, 9]],
            [[], [1, 4, 9], [], [3, 4, 7, 9], [], [1, 3, 4], [], [1, 7, 9], [4, 7, 9]],
            [[4, 5, 8], [2, 4, 5, 8], [4, 8], [3, 4, 8], [], [], [2, 7], [3, 8], []],
            [[], [2, 4, 8], [1, 4, 8, 9], [3, 4, 8], [], [2, 3, 4, 8], [], [3, 8], [2, 9]],
            [[], [], [8, 9], [], [], [2, 8], [2, 9], [], []],
        ])
    })
})
